name: ci/cd piplelane

on:
    push:
        branches:
            - main

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - name: checkout the code
              uses: actions/checkout@v2
            - name: setup go
              uses: actions/setup-go@v3
              with:
                go-version: '1.21'
            - name: run test
              run: |
                go test -v ./...

    build-and-push-docker:
        runs-on: ubuntu-latest
        needs: test
        steps:
            - name: checkout the code
              uses: actions/checkout@v2
            - name: create env file
              run: |
                echo "${{secrets.ENV}}" >> .env
            - name: build docker
              run: docker build -t ridhomauludin/donasipohon:1.0.0 .
            - name: docker hub login
              uses: docker/login-action@v1
              with: 
                username: ${{secrets.DOCKER_USER}}
                password: ${{secrets.DOCKER_TOKEN}}
            - name: push image
              run: docker push ridhomauludin/donasipohon:1.0.0
            - name: Deploy to EC2
              run: |
                ssh -i ec2-key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << EOF
                  # Stop the current container if running
                  sudo docker ps -q --filter "publish=8000" | grep -q . && sudo docker stop $(sudo docker ps -q --filter "publish=8000") || true
                  sudo docker rm my-container || true
                  
                  # Remove the old container
                  sudo docker ps -q --filter "name=my-container" | grep -q . && sudo docker rm my-container || true
    
                  # Pull the latest image
                  sudo docker pull $IMAGE_URI
    
                  # Run the new container
                  sudo docker run -d --name my-container -p 8000:8000 $IMAGE_URI
                EOF
    
            - name: Clean up PEM file
              run: rm -f ec2-key.pem

          

